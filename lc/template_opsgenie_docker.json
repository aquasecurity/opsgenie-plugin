{
{{if and (eq (.event.Resolve "$.action") "policy.failure") (eq (.event.Resolve "$.result") 2)}}
  "message": "Non-compliant image blocked",
  "description":"Blocked non-compliant image {{.event.Resolve "$.imagename"}}",
{{else if and (eq (.event.Resolve "$.action") "policy.failure") (eq (.event.Resolve "$.result") 3)}}
  "message": "Non-compliant image detected",
  "description":"Detected non-compliant image {{.event.Resolve "$.imagename"}}",
{{else if and (eq (.event.Resolve "$.action") "reallow") (eq (.event.Resolve "$.result") 2)}}
  "message": "Unregistered image blocked",
  "description":"Blocked unregistered image {{.event.Resolve "$.imagename"}}",
{{else if and (eq (.event.Resolve "$.action") "reallow") (eq (.event.Resolve "$.result") 3)}}
  "message": "Unregistered image detected",
  "description":"Detected unregistered image {{.event.Resolve "$.imagename"}}",
{{else}}
  "message": "Docker image alert (action: {{.event.Resolve "$.action"}}, result: {{.event.Resolve "$.result"}})",
  "description": "Docker image alert (action: {{.event.Resolve "$.action"}}, result: {{.event.Resolve "$.result"}})",
{{end}}

{{if (.event.Resolve "$.containername")}}
  "alias": "{{.event.Resolve "$.containername"}}",
{{else}}
  "alias": "{{.event.Resolve "$.imagename"}}",
{{end}}

{{if .responders}}
  "responders":[
        {{.responders}}
  ],
{{end}}

{{if .visibleTo}}
  "visibleTo":[
    {{.visibleTo}}
  ],
{{end}}

{{if .user}}
  "user": "{{.user}}",
{{end}}

{{if .entity}}
  "entity": "{{.entity}}",
{{end}}

{{if .source}}
  "source": "{{.source}}",
{{end}}

{{if .event.Resolve "$.data"}}
{{$keys := (keysSlice (.event.Resolve "$.data"))}}
{{$lastIndex := (sub (len $keys) 1)}}
{{$eventVar := .event}}
  "details":{
{{range $index, $key := $keys}}
{{$path := (printf "$.data.%s" $key)}}
    "{{$key}}": "{{js ($eventVar.ResolveAsString $path)}}"{{if ne $lastIndex $index}},{{end}}
{{end}}
  },
{{end}}

{{if eq (.event.Resolve "$.result") 4}}
  "priority":"P2"
{{else}}
  "priority":"P3"
{{end}}
}
